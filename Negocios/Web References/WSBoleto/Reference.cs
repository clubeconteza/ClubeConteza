//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Negocios.WSBoleto {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClubeContezaSoap", Namespace="http://tempuri.org/")]
    public partial class ClubeConteza : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GerarBoletoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClubeConteza() {
            this.Url = global::Negocios.Properties.Settings.Default.Negocios_WSBoleto_SICOOB;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GerarBoletoCompletedEventHandler GerarBoletoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GerarBoleto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ParametrosSaida GerarBoleto(
                    int TipoCedente, 
                    int Banco, 
                    long EmpresaId, 
                    string Emissao, 
                    string codTipoVencimento, 
                    string Vencimento, 
                    string codEspDocumento, 
                    double Valor, 
                    double Abatimento, 
                    double IOF, 
                    long codMunicipio, 
                    string cidade, 
                    string uf, 
                    string cep, 
                    string endereco, 
                    string bairro, 
                    string nomeSacado, 
                    string cpfCGC, 
                    long Cobranca, 
                    string Instrucao1, 
                    string Instrucao2, 
                    string Instrucao3, 
                    string Instrucao4, 
                    string Instrucao5) {
            object[] results = this.Invoke("GerarBoleto", new object[] {
                        TipoCedente,
                        Banco,
                        EmpresaId,
                        Emissao,
                        codTipoVencimento,
                        Vencimento,
                        codEspDocumento,
                        Valor,
                        Abatimento,
                        IOF,
                        codMunicipio,
                        cidade,
                        uf,
                        cep,
                        endereco,
                        bairro,
                        nomeSacado,
                        cpfCGC,
                        Cobranca,
                        Instrucao1,
                        Instrucao2,
                        Instrucao3,
                        Instrucao4,
                        Instrucao5});
            return ((ParametrosSaida)(results[0]));
        }
        
        /// <remarks/>
        public void GerarBoletoAsync(
                    int TipoCedente, 
                    int Banco, 
                    long EmpresaId, 
                    string Emissao, 
                    string codTipoVencimento, 
                    string Vencimento, 
                    string codEspDocumento, 
                    double Valor, 
                    double Abatimento, 
                    double IOF, 
                    long codMunicipio, 
                    string cidade, 
                    string uf, 
                    string cep, 
                    string endereco, 
                    string bairro, 
                    string nomeSacado, 
                    string cpfCGC, 
                    long Cobranca, 
                    string Instrucao1, 
                    string Instrucao2, 
                    string Instrucao3, 
                    string Instrucao4, 
                    string Instrucao5) {
            this.GerarBoletoAsync(TipoCedente, Banco, EmpresaId, Emissao, codTipoVencimento, Vencimento, codEspDocumento, Valor, Abatimento, IOF, codMunicipio, cidade, uf, cep, endereco, bairro, nomeSacado, cpfCGC, Cobranca, Instrucao1, Instrucao2, Instrucao3, Instrucao4, Instrucao5, null);
        }
        
        /// <remarks/>
        public void GerarBoletoAsync(
                    int TipoCedente, 
                    int Banco, 
                    long EmpresaId, 
                    string Emissao, 
                    string codTipoVencimento, 
                    string Vencimento, 
                    string codEspDocumento, 
                    double Valor, 
                    double Abatimento, 
                    double IOF, 
                    long codMunicipio, 
                    string cidade, 
                    string uf, 
                    string cep, 
                    string endereco, 
                    string bairro, 
                    string nomeSacado, 
                    string cpfCGC, 
                    long Cobranca, 
                    string Instrucao1, 
                    string Instrucao2, 
                    string Instrucao3, 
                    string Instrucao4, 
                    string Instrucao5, 
                    object userState) {
            if ((this.GerarBoletoOperationCompleted == null)) {
                this.GerarBoletoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGerarBoletoOperationCompleted);
            }
            this.InvokeAsync("GerarBoleto", new object[] {
                        TipoCedente,
                        Banco,
                        EmpresaId,
                        Emissao,
                        codTipoVencimento,
                        Vencimento,
                        codEspDocumento,
                        Valor,
                        Abatimento,
                        IOF,
                        codMunicipio,
                        cidade,
                        uf,
                        cep,
                        endereco,
                        bairro,
                        nomeSacado,
                        cpfCGC,
                        Cobranca,
                        Instrucao1,
                        Instrucao2,
                        Instrucao3,
                        Instrucao4,
                        Instrucao5}, this.GerarBoletoOperationCompleted, userState);
        }
        
        private void OnGerarBoletoOperationCompleted(object arg) {
            if ((this.GerarBoletoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GerarBoletoCompleted(this, new GerarBoletoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ParametrosSaida {
        
        private int erroField;
        
        private string erroDescField;
        
        private string numeroBoletoField;
        
        private string hTMLField;
        
        private string boletoCarneField;
        
        private string nossoNumeroField;
        
        private string agenciaField;
        
        private string contaField;
        
        private string carteiraField;
        
        /// <remarks/>
        public int Erro {
            get {
                return this.erroField;
            }
            set {
                this.erroField = value;
            }
        }
        
        /// <remarks/>
        public string ErroDesc {
            get {
                return this.erroDescField;
            }
            set {
                this.erroDescField = value;
            }
        }
        
        /// <remarks/>
        public string NumeroBoleto {
            get {
                return this.numeroBoletoField;
            }
            set {
                this.numeroBoletoField = value;
            }
        }
        
        /// <remarks/>
        public string HTML {
            get {
                return this.hTMLField;
            }
            set {
                this.hTMLField = value;
            }
        }
        
        /// <remarks/>
        public string BoletoCarne {
            get {
                return this.boletoCarneField;
            }
            set {
                this.boletoCarneField = value;
            }
        }
        
        /// <remarks/>
        public string NossoNumero {
            get {
                return this.nossoNumeroField;
            }
            set {
                this.nossoNumeroField = value;
            }
        }
        
        /// <remarks/>
        public string Agencia {
            get {
                return this.agenciaField;
            }
            set {
                this.agenciaField = value;
            }
        }
        
        /// <remarks/>
        public string Conta {
            get {
                return this.contaField;
            }
            set {
                this.contaField = value;
            }
        }
        
        /// <remarks/>
        public string Carteira {
            get {
                return this.carteiraField;
            }
            set {
                this.carteiraField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GerarBoletoCompletedEventHandler(object sender, GerarBoletoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GerarBoletoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GerarBoletoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParametrosSaida Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParametrosSaida)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591